
using System;
using System.Collections.Generic;

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace AADB2C.CustomPolicy.Parser
{
    // <auto-generated />
    //
    // To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
    //
    //    using QuickType;
    //
    //    var welcome = Welcome.FromJson(jsonString);


    public partial class TrustFrameworkKeyset
        {
            [JsonProperty("id")]
            public string Id { get; set; }

            [JsonProperty("keys")]
            public Key[] Keys { get; set; }
        }

        public partial class Key
        {
            [JsonProperty("k")]
            public string K { get; set; }

            [JsonProperty("use")]
            public string Use { get; set; }

            [JsonProperty("kty")]
            public string Kty { get; set; }
        }

        public partial class TrustFrameworkKeyset
        {
            public static TrustFrameworkKeyset FromJson(string json) => JsonConvert.DeserializeObject<TrustFrameworkKeyset>(json, Converter.Settings);
        }

        public static class Serialize
        {
            public static string ToJson(this TrustFrameworkKeyset self) => JsonConvert.SerializeObject(self, Converter.Settings);
        }

        internal static class Converter
        {
            public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
            {
                MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
                NullValueHandling = NullValueHandling.Ignore,
                DateParseHandling = DateParseHandling.None,
                Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
            };
        }
    }


